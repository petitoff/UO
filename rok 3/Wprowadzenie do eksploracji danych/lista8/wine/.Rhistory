for (k in 2:7) {
fviz_cluster(results[[k]], data = wine_data_scaled, geom = "point",
ellipse = TRUE, main = paste("k =", k))
}
# c) Określenie optymalnej liczby klastrów
# Metoda łokcia
fviz_nbclust(wine_data_scaled, kmeans, method = "wss")
# # Metoda średniego konturu
fviz_nbclust(wine_data_scaled, kmeans, method = "silhouette")
# Statystyka luk
set.seed(123)
gap_stat <- clusGap(wine_data_scaled, FUN = kmeans, nstart = 25, K.max = 10, B = 50)
fviz_gap_stat(gap_stat)
# Statystyka luk
set.seed(123)
gap_stat <- clusGap(wine_data_scaled, FUN = kmeans, nstart = 25, K.max = 10, B = 50)
fviz_gap_stat(gap_stat)
# # Metoda średniego konturu
fviz_nbclust(wine_data_scaled, kmeans, method = "silhouette")
fviz_nbclust(wine_data_scaled, kmeans, method = "wss")
# b) Wizualizacja wyników dla k = 2 do 7
par(mfrow = c(3, 2))
for (k in 2:7) {
fviz_cluster(results[[k]], data = wine_data_scaled, geom = "point",
ellipse = TRUE, main = paste("k =", k))
}
# b) Wizualizacja wyników dla k = 2 do 7
par(mfrow = c(3, 2))
for (k in 2:7) {
fviz_cluster(results[[k]], data = wine_data_scaled, geom = "point",
ellipse = TRUE, main = paste("k =", k))
}
library(tidyverse)
library(cluster)
library(factoextra)
# Ustawienie ścieżki dostępu do danych
path <- "C:/Users/petit/Desktop/repos/UO/rok 3/Wprowadzenie do eksploracji danych/lista8/wine"
setwd(path)
# Read the data
wine_data <- read.csv('wine.data', header = FALSE)
# Standardize the data
wine_data_scaled <- scale(wine_data)
# a) Stosowanie metody k-średnich dla k = 1 do 15
results <- list()
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
results[[k]] <- kmeans_result
cat("Dla k =", k, "\n",
"Całkowita suma kwadratów wewnątrz klastrów:", kmeans_result$tot.withinss, "\n",
"Suma kwadratów dla każdego klastra:", kmeans_result$withinss, "\n",
"Centra klastrów:\n", kmeans_result$centers, "\n",
"Liczba obserwacji w każdym klastrze:", kmeans_result$size, "\n",
"Przypisanie klastrów dla pierwszych 20 obserwacji:", kmeans_result$cluster[1:20], "\n\n")
}
# b) Wizualizacja wyników dla k = 2 do 7
par(mfrow = c(3, 2))
for (k in 2:7) {
fviz_cluster(results[[k]], data = wine_data_scaled, geom = "point",
ellipse = TRUE, main = paste("k =", k))
}
summary(results[[2]])
fviz_cluster(results[[2]], data = wine_data_scaled, geom = "point", ellipse = TRUE, main = "k = 2")
print(k)
for (k in 2:7) {
print(k)
fviz_cluster(results[[k]], data = wine_data_scaled, geom = "point",
ellipse = TRUE, main = paste("k =", k))
}
library(tidyverse)
library(cluster)
library(factoextra)
# Ustawienie ścieżki dostępu do danych
path <- "C:/Users/petit/Desktop/repos/UO/rok 3/Wprowadzenie do eksploracji danych/lista8/wine"
setwd(path)
# Read the data
wine_data <- read.csv('wine.data', header = FALSE)
# Standardize the data
wine_data_scaled <- scale(wine_data)
# a) Stosowanie metody k-średnich dla k = 1 do 15
results <- list()
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
results[[k]] <- kmeans_result
cat("Dla k =", k, "\n",
"Całkowita suma kwadratów wewnątrz klastrów:", kmeans_result$tot.withinss, "\n",
"Suma kwadratów dla każdego klastra:", kmeans_result$withinss, "\n",
"Centra klastrów:\n", kmeans_result$centers, "\n",
"Liczba obserwacji w każdym klastrze:", kmeans_result$size, "\n",
"Przypisanie klastrów dla pierwszych 20 obserwacji:", kmeans_result$cluster[1:20], "\n\n")
}
# b) Wizualizacja wyników dla k = 2 do 7
par(mfrow = c(3, 2))
summary(results[[2]])
fviz_cluster(results[[2]], data = wine_data_scaled, geom = "point", ellipse = TRUE, main = "k = 2")
for (k in 2:7) {
fviz_cluster(results[[k]], data = wine_data_scaled, geom = "point", ellipse = TRUE, main = paste("k =", k))
}
dev.off()  # Zamknij urządzenie graficzne}
library(tidyverse)
library(cluster)
library(factoextra)
# Ustawienie ścieżki dostępu do danych
path <- "C:/Users/petit/Desktop/repos/UO/rok 3/Wprowadzenie do eksploracji danych/lista8/wine"
setwd(path)
# Read the data
wine_data <- read.csv('wine.data', header = FALSE)
# Standardize the data
wine_data_scaled <- scale(wine_data)
# a) Stosowanie metody k-średnich dla k = 1 do 15
results <- list()
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
results[[k]] <- kmeans_result
cat("Dla k =", k, "\n",
"Całkowita suma kwadratów wewnątrz klastrów:", kmeans_result$tot.withinss, "\n",
"Suma kwadratów dla każdego klastra:", kmeans_result$withinss, "\n",
"Centra klastrów:\n", kmeans_result$centers, "\n",
"Liczba obserwacji w każdym klastrze:", kmeans_result$size, "\n",
"Przypisanie klastrów dla pierwszych 20 obserwacji:", kmeans_result$cluster[1:20], "\n\n")
}
# b) Wizualizacja wyników dla k = 2 do 7
par(mfrow = c(3, 2))
summary(results[[2]])
fviz_cluster(results[[2]], data = wine_data_scaled, geom = "point", ellipse = TRUE, main = "k = 2")
for (k in 2:7) {
# Tworzenie wykresu
plot <- fviz_cluster(results[[k]], data = wine_data_scaled, geom = "point", ellipse = TRUE, main = paste("k =", k))
# Zapisywanie wykresu do pliku PNG
ggsave(filename = paste("kmeans_k", k, ".png"), plot = plot, width = 10, height = 6)
}
for (k in 2:7) {
print(k)
# Tworzenie wykresu
plot <- fviz_cluster(results[[k]], data = wine_data_scaled, geom = "point", ellipse = TRUE, main = paste("k =", k))
# Zapisywanie wykresu do pliku PNG
ggsave(filename = paste("kmeans_k", k, ".png"), plot = plot, width = 10, height = 6)
}
library(tidyverse)
library(cluster)
library(factoextra)
library(ggplot2)
# Ustawienie ścieżki dostępu do danych
path <- "C:/Users/petit/Desktop/repos/UO/rok 3/Wprowadzenie do eksploracji danych/lista8/wine"
setwd(path)
# Read the data
wine_data <- read.csv('wine.data', header = FALSE)
# Standardize the data
wine_data_scaled <- scale(wine_data)
# a) Stosowanie metody k-średnich dla k = 1 do 15
results <- list()
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
results[[k]] <- kmeans_result
cat("Dla k =", k, "\n",
"Całkowita suma kwadratów wewnątrz klastrów:", kmeans_result$tot.withinss, "\n",
"Suma kwadratów dla każdego klastra:", kmeans_result$withinss, "\n",
"Centra klastrów:\n", kmeans_result$centers, "\n",
"Liczba obserwacji w każdym klastrze:", kmeans_result$size, "\n",
"Przypisanie klastrów dla pierwszych 20 obserwacji:", kmeans_result$cluster[1:20], "\n\n")
}
# b) Wizualizacja wyników dla k = 2 do 7
par(mfrow = c(3, 2))
summary(results[[2]])
##fviz_cluster(results[[2]], data = wine_data_scaled, geom = "point", ellipse = TRUE, main = "k = 2")
for (k in 2:7) {
# Tworzenie wykresu
plot <- fviz_cluster(results[[k]], data = wine_data_scaled, geom = "point", ellipse = TRUE, main = paste("k =", k))
# Wyświetlanie wykresu
print(plot)
# Zapisywanie wykresu do pliku PNG
ggsave(filename = paste("kmeans_k", k, ".png"), plot = plot, width = 10, height = 6)
# Sprawdź, czy plik został zapisany
if (file.exists(paste("kmeans_k", k, ".png"))) {
cat("Plik", paste("kmeans_k", k, ".png"), "został zapisany.\n")
} else {
cat("Plik", paste("kmeans_k", k, ".png"), "NIE został zapisany.\n")
}
}
# c) Określenie optymalnej liczby klastrów
# Metoda łokcia
fviz_nbclust(wine_data_scaled, kmeans, method = "wss")
# # Metoda średniego konturu
fviz_nbclust(wine_data_scaled, kmeans, method = "silhouette")
# Statystyka luk
set.seed(123)
gap_stat <- clusGap(wine_data_scaled, FUN = kmeans, nstart = 25, K.max = 10, B = 50)
fviz_gap_stat(gap_stat)
library(tidyverse)
library(cluster)
library(factoextra)
library(ggplot2)
# Ustawienie ścieżki dostępu do danych
path <- "C:/Users/petit/Desktop/repos/UO/rok 3/Wprowadzenie do eksploracji danych/lista8/wine"
setwd(path)
# Read the data
wine_data <- read.csv('wine.data', header = FALSE)
# Standardize the data
wine_data_scaled <- scale(wine_data)
# a) Stosowanie metody k-średnich dla k = 1 do 15
results <- list()
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
results[[k]] <- kmeans_result
cat("Dla k =", k, "\n",
"Całkowita suma kwadratów wewnątrz klastrów:", kmeans_result$tot.withinss, "\n",
"Suma kwadratów dla każdego klastra:", kmeans_result$withinss, "\n",
"Centra klastrów:\n", kmeans_result$centers, "\n",
"Liczba obserwacji w każdym klastrze:", kmeans_result$size, "\n",
"Przypisanie klastrów dla pierwszych 20 obserwacji:", kmeans_result$cluster[1:20], "\n\n")
}
# b) Wizualizacja wyników dla k = 2 do 7
par(mfrow = c(3, 2))
summary(results[[2]])
##fviz_cluster(results[[2]], data = wine_data_scaled, geom = "point", ellipse = TRUE, main = "k = 2")
for (k in 2:7) {
# Tworzenie wykresu
plot <- fviz_cluster(results[[k]], data = wine_data_scaled, geom = "point", ellipse = TRUE, main = paste("k =", k))
# Wyświetlanie wykresu
print(plot)
# Zapisywanie wykresu do pliku PNG
ggsave(filename = paste("kmeans_k", k, ".png"), plot = plot, width = 10, height = 6)
# Sprawdź, czy plik został zapisany
if (file.exists(paste("kmeans_k", k, ".png"))) {
cat("Plik", paste("kmeans_k", k, ".png"), "został zapisany.\n")
} else {
cat("Plik", paste("kmeans_k", k, ".png"), "NIE został zapisany.\n")
}
}
# c) Określenie optymalnej liczby klastrów
# Metoda łokcia
elbow_plot <- fviz_nbclust(wine_data_scaled, kmeans, method = "wss")
ggsave(filename = "elbow_method.png", plot = elbow_plot, width = 10, height = 6)
# Metoda średniego konturu
silhouette_plot <- fviz_nbclust(wine_data_scaled, kmeans, method = "silhouette")
ggsave(filename = "silhouette_method.png", plot = silhouette_plot, width = 10, height = 6)
# Statystyka luk
set.seed(123)
gap_stat <- clusGap(wine_data_scaled, FUN = kmeans, nstart = 25, K.max = 10, B = 50)
gap_stat_plot <- fviz_gap_stat(gap_stat)
ggsave(filename = "gap_statistic.png", plot = gap_stat_plot, width = 10, height = 6)
# a) Stosowanie metody k-średnich dla k = 1 do 15
results <- list()
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
results[[k]] <- kmeans_result
cat("Dla k =", k, "\n",
"Całkowita suma kwadratów wewnątrz klastrów:", kmeans_result$tot.withinss, "\n",
"Suma kwadratów dla każdego klastra:", kmeans_result$withinss, "\n",
"Centra klastrów:\n", kmeans_result$centers, "\n",
"Liczba obserwacji w każdym klastrze:", kmeans_result$size, "\n",
"Przypisanie klastrów dla pierwszych 20 obserwacji:", kmeans_result$cluster[1:20], "\n\n")
}
library(tidyverse)
library(cluster)
library(factoextra)
library(ggplot2)
# Załaduj potrzebny pakiet
library(openxlsx)
# Ustawienie ścieżki dostępu do danych
path <- "C:/Users/petit/Desktop/repos/UO/rok 3/Wprowadzenie do eksploracji danych/lista8/wine"
setwd(path)
# Read the data
wine_data <- read.csv('wine.data', header = FALSE)
# Standardize the data
wine_data_scaled <- scale(wine_data)
# a) Stosowanie metody k-średnich dla k = 1 do 15
# Inicjalizacja listy do przechowywania tabel z wynikami dla każdego k
results_tables <- list()
# Pętla przez wyniki k-średnich i zapisuje wyniki do listy tabel
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
# Stwórz ramkę danych z wynikami
results_df <- data.frame(
Cluster = 1:k,
TotWithinss = kmeans_result$tot.withinss,
Withinss = kmeans_result$withinss,
Size = kmeans_result$size
)
# Dla centrów klastrów, które są macierzami, przekształć je w listę ram danych
centers_df <- as.data.frame(t(kmeans_result$centers))
# Połącz wyniki z centrów klastrów z główną ramką danych
results_df <- cbind(results_df, centers_df)
# Dodaj przynależność klastrów dla pierwszych 20 obserwacji
results_df$Cluster_Assignment <- list(kmeans_result$cluster[1:20])
# Dodaj ramkę danych do listy tabel
results_tables[[paste("k=", k)]] <- results_df
}
library(tidyverse)
library(cluster)
library(factoextra)
library(ggplot2)
# Załaduj potrzebny pakiet
library(openxlsx)
# Ustawienie ścieżki dostępu do danych
path <- "C:/Users/petit/Desktop/repos/UO/rok 3/Wprowadzenie do eksploracji danych/lista8/wine"
setwd(path)
# Read the data
wine_data <- read.csv('wine.data', header = FALSE)
# Standardize the data
wine_data_scaled <- scale(wine_data)
# a) Stosowanie metody k-średnich dla k = 1 do 15
# Inicjalizacja listy do przechowywania tabel z wynikami dla każdego k
results_tables <- list()
# Pętla przez wyniki k-średnich i zapisuje wyniki do listy tabel
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
# Stwórz ramkę danych z wynikami
results_df <- data.frame(
Cluster = 1:k,
TotWithinss = kmeans_result$tot.withinss,
Withinss = kmeans_result$withinss,
Size = kmeans_result$size
)
# Dla centrów klastrów, które są macierzami, przekształć je w listę ram danych
centers_df <- as.data.frame(t(kmeans_result$centers))
# Połącz wyniki z centrów klastrów z główną ramką danych
results_df <- cbind(results_df, centers_df)
# Dodaj przynależność klastrów dla pierwszych 20 obserwacji
results_df$Cluster_Assignment <- list(kmeans_result$cluster[1:20])
# Dodaj ramkę danych do listy tabel
results_tables[[paste("k=", k)]] <- results_df
}
library(tidyverse)
library(cluster)
library(factoextra)
library(ggplot2)
# Załaduj potrzebny pakiet
library(openxlsx)
# Ustawienie ścieżki dostępu do danych
path <- "C:/Users/petit/Desktop/repos/UO/rok 3/Wprowadzenie do eksploracji danych/lista8/wine"
setwd(path)
# Read the data
wine_data <- read.csv('wine.data', header = FALSE)
# Standardize the data
wine_data_scaled <- scale(wine_data)
# a) Stosowanie metody k-średnich dla k = 1 do 15
# Inicjalizacja listy do przechowywania tabel z wynikami dla każdego k
results_tables <- list()
# Pętla przez wyniki k-średnich i zapisuje wyniki do listy tabel
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
# Stwórz ramkę danych z wynikami
results_df <- data.frame(
Cluster = rep(1:k, each = nrow(kmeans_result$centers)),
TotWithinss = rep(kmeans_result$tot.withinss, nrow(kmeans_result$centers)),
Withinss = rep(kmeans_result$withinss, each = nrow(kmeans_result$centers)),
Size = rep(kmeans_result$size, each = nrow(kmeans_result$centers))
)
# Dla centrów klastrów, które są macierzami, przekształć je w listę ram danych
centers_df <- as.data.frame(t(kmeans_result$centers))
# Połącz wyniki z centrów klastrów z główną ramką danych
results_df <- cbind(results_df, centers_df)
# Dodaj przynależność klastrów dla pierwszych 20 obserwacji
cluster_assignments <- kmeans_result$cluster[1:20]
results_df$Cluster_Assignment <- list(rep(cluster_assignments, length.out = nrow(kmeans_result$centers)))
# Dodaj ramkę danych do listy tabel
results_tables[[paste("k=", k)]] <- results_df
}
library(tidyverse)
library(cluster)
library(factoextra)
library(ggplot2)
# Załaduj potrzebny pakiet
library(openxlsx)
# Ustawienie ścieżki dostępu do danych
path <- "C:/Users/petit/Desktop/repos/UO/rok 3/Wprowadzenie do eksploracji danych/lista8/wine"
setwd(path)
# Read the data
wine_data <- read.csv('wine.data', header = FALSE)
# Standardize the data
wine_data_scaled <- scale(wine_data)
# a) Stosowanie metody k-średnich dla k = 1 do 15
# Inicjalizacja listy do przechowywania tabel z wynikami dla każdego k
results_tables <- list()
# Pętla przez wyniki k-średnich i zapisuje wyniki do listy tabel
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
# Stwórz ramkę danych z wynikami
results_df <- data.frame(
Cluster = rep(1:k, each = nrow(kmeans_result$centers)),
TotWithinss = rep(kmeans_result$tot.withinss, nrow(kmeans_result$centers)),
Withinss = rep(kmeans_result$withinss, each = nrow(kmeans_result$centers)),
Size = rep(kmeans_result$size, each = nrow(kmeans_result$centers))
)
# Dla centrów klastrów, które są macierzami, przekształć je w listę ram danych
centers_df <- as.data.frame(t(kmeans_result$centers))
# Połącz wyniki z centrów klastrów z główną ramką danych
results_df <- cbind(results_df, centers_df)
# Dodaj przynależność klastrów dla pierwszych 20 obserwacji
cluster_assignments <- kmeans_result$cluster[1:20]
results_df$Cluster_Assignment <- list(rep(cluster_assignments, length.out = nrow(kmeans_result$centers)))
# Dodaj ramkę danych do listy tabel
results_tables[[paste("k=", k)]] <- results_df
}
library(tidyverse)
library(cluster)
library(factoextra)
library(ggplot2)
# Załaduj potrzebny pakiet
library(openxlsx)
# Ustawienie ścieżki dostępu do danych
path <- "C:/Users/petit/Desktop/repos/UO/rok 3/Wprowadzenie do eksploracji danych/lista8/wine"
setwd(path)
# Read the data
wine_data <- read.csv('wine.data', header = FALSE)
# Standardize the data
wine_data_scaled <- scale(wine_data)
# a) Stosowanie metody k-średnich dla k = 1 do 15
# Inicjalizacja listy do przechowywania tabel z wynikami dla każdego k
results_tables <- list()
# Pętla przez wyniki k-średnich i zapisuje wyniki do listy tabel
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
# Stwórz ramkę danych z wynikami
results_df <- data.frame(
Cluster = rep(1:k, each = length(kmeans_result$cluster)),
TotWithinss = rep(kmeans_result$tot.withinss, length(kmeans_result$cluster)),
Withinss = rep(kmeans_result$withinss, times = length(kmeans_result$cluster) / length(kmeans_result$withinss)),
Size = rep(kmeans_result$size, times = length(kmeans_result$cluster) / length(kmeans_result$size))
)
# Dla centrów klastrów, które są macierzami, przekształć je w listę ram danych
centers_df <- as.data.frame(t(kmeans_result$centers))
# Rozszerz wyniki centrów klastrów, aby pasowały do wyników klastrów
if (nrow(centers_df) < length(kmeans_result$cluster)) {
centers_df <- centers_df[rep(1:nrow(centers_df), length.out = length(kmeans_result$cluster)), ]
row.names(centers_df) <- NULL  # Reset row names to avoid duplication
}
# Połącz wyniki z centrów klastrów z główną ramką danych
results_df <- cbind(results_df, centers_df)
# Dodaj przynależność klastrów dla pierwszych 20 obserwacji
cluster_assignments <- rep(kmeans_result$cluster[1:20], length.out = length(kmeans_result$cluster))
results_df$Cluster_Assignment <- cluster_assignments
# Dodaj ramkę danych do listy tabel
results_tables[[paste("k=", k)]] <- results_df
}
library(tidyverse)
library(cluster)
library(factoextra)
library(ggplot2)
# Załaduj potrzebny pakiet
library(openxlsx)
# Ustawienie ścieżki dostępu do danych
path <- "C:/Users/petit/Desktop/repos/UO/rok 3/Wprowadzenie do eksploracji danych/lista8/wine"
setwd(path)
# Read the data
wine_data <- read.csv('wine.data', header = FALSE)
# Standardize the data
wine_data_scaled <- scale(wine_data)
# a) Stosowanie metody k-średnich dla k = 1 do 15
# Inicjalizacja listy do przechowywania tabel z wynikami dla każdego k
results_tables <- list()
# Pętla przez wyniki k-średnich i zapisuje wyniki do listy tabel
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
# Stwórz ramkę danych z wynikami
results_df <- data.frame(
Cluster = rep(1:k, each = length(kmeans_result$cluster)),
TotWithinss = rep(kmeans_result$tot.withinss, length(kmeans_result$cluster)),
Withinss = rep(kmeans_result$withinss, times = length(kmeans_result$cluster) / length(kmeans_result$withinss)),
Size = rep(kmeans_result$size, times = length(kmeans_result$cluster) / length(kmeans_result$size))
)
# Dla centrów klastrów, które są macierzami, przekształć je w listę ram danych
centers_df <- as.data.frame(t(kmeans_result$centers))
# Rozszerz wyniki centrów klastrów, aby pasowały do wyników klastrów
if (nrow(centers_df) < length(kmeans_result$cluster)) {
centers_df <- centers_df[rep(1:nrow(centers_df), length.out = length(kmeans_result$cluster)), ]
row.names(centers_df) <- NULL  # Reset row names to avoid duplication
}
# Połącz wyniki z centrów klastrów z główną ramką danych
results_df <- cbind(results_df, centers_df)
# Dodaj przynależność klastrów dla pierwszych 20 obserwacji
cluster_assignments <- rep(kmeans_result$cluster[1:20], length.out = length(kmeans_result$cluster))
results_df$Cluster_Assignment <- cluster_assignments
# Dodaj ramkę danych do listy tabel
results_tables[[paste("k=", k)]] <- results_df
}
library(tidyverse)
library(cluster)
library(factoextra)
library(ggplot2)
# Ustawienie ścieżki dostępu do danych
path <- "C:/Users/petit/Desktop/repos/UO/rok 3/Wprowadzenie do eksploracji danych/lista8/wine"
setwd(path)
# Read the data
wine_data <- read.csv('wine.data', header = FALSE)
# Standardize the data
wine_data_scaled <- scale(wine_data)
# a) Stosowanie metody k-średnich dla k = 1 do 15
results <- list()
for (k in 1:15) {
set.seed(123)  # dla powtarzalności wyników
kmeans_result <- kmeans(wine_data_scaled, centers = k, nstart = 25)
results[[k]] <- kmeans_result
cat("Dla k =", k, "\n",
"Całkowita suma kwadratów wewnątrz klastrów:", kmeans_result$tot.withinss, "\n",
"Suma kwadratów dla każdego klastra:", kmeans_result$withinss, "\n",
"Centra klastrów:\n", kmeans_result$centers, "\n",
"Liczba obserwacji w każdym klastrze:", kmeans_result$size, "\n",
"Przypisanie klastrów dla pierwszych 20 obserwacji:", kmeans_result$cluster[1:20], "\n\n")
}
