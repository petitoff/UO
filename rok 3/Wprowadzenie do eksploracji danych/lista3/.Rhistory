'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
View(nowe_nazwy)
View(wine)
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
# a) Oto kod usuwający kolumny z wartościami nominalnymi (identyfikatory, itp.):
wine <- wine[, -1] # usuwanie pierwszej kolumny z identyfikatorami (zmiennej celu nie usuwamy)
# b) Oto kod zmieniający nazwy kolumn na nazwy w języku polskim:
nowe_nazwy <- c(
'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
names(wine) <- nowe_nazwy
View(wine)
# c) Oto kod zapisujący zmienne o wartościach logicznych jako logiczne:
wine$Klasa <- as.factor(wine$Klasa) # zakładając, że Klasa to zmienna celu
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
# b) Oto kod zmieniający nazwy kolumn na nazwy w języku polskim:
nowe_nazwy <- c(
"Klasa",
'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
names(wine) <- nowe_nazwy
View(wine)
# c) Oto kod zapisujący zmienne o wartościach logicznych jako logiczne:
wine$Klasa <- as.factor(wine$Klasa) # zakładając, że Klasa to zmienna celu
wprowadzone <- c('Alkohol', 'Kwas jabłkowy', 'Popiół', 'Alkalność popiołu', 'Magnez', 'Całkowite fenole', 'Flawonoidy', 'Fenole nietrwałe', 'Proantocyjanidy', 'Intensywność koloru', 'Odcień', 'Stężenie odwiedlane win', 'Prolina')
for (zmienna in wprowadzone) {
if (class(wine[[zmienna]]) != "numeric") {
wine[[zmienna]] <- as.numeric(wine[[zmienna]])
}
}
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
# b) Oto kod zmieniający nazwy kolumn na nazwy w języku polskim:
nowe_nazwy <- c(
"Klasa",
'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
names(wine) <- nowe_nazwy
View(wine)
# c) Oto kod zapisujący zmienne o wartościach logicznych jako logiczne:
wine$Klasa <- as.factor(wine$Klasa) # zakładając, że Klasa to zmienna celu
# d) Oto kod sprawdzający, czy zmienne o wartościach liczbowych są typu liczbowego, i jeśli nie, zapisujący je jako numeryczne:
wprowadzone <- c('Alkohol', 'Kwas jabłkowy', 'Popiół', 'Alkalność popiołu', 'Magnez', 'Całkowite fenole', 'Flawonoidy', 'Fenole nietrwałe', 'Proantocyjanidy', 'Intensywność koloru', 'Odcień', 'Stężenie odwiedlane win', 'Prolina')
for (zmienna in wprowadzone) {
if (class(wine[[zmienna]]) != "numeric") {
wine[[zmienna]] <- as.numeric(wine[[zmienna]])
}
}
# f) Oto kod sprawdzający i zamieniający brakujące wartości w kolumnach numerycznych na wartości średnie dla tych kolumn:
kolumny_numeryczne <- c('Alkohol', 'Kwas jabłkowy', 'Popiół', 'Alkalność popiołu', 'Magnez', 'Całkowite fenole', 'Flawonoidy', 'Fenole nietrwałe', 'Proantocyjanidy', 'Intensywność koloru', 'Odcień', 'Stężenie odwiedlane win', 'Prolina')
for (kolumna in kolumny_numeryczne) {
brakujace <- is.na(wine[[kolumna]])
if (sum(brakujace) > 0) {
srednia <- mean(wine[[kolumna]], na.rm = TRUE)
wine[[kolumna]][brakujace] <- srednia
}
}
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
# b) Oto kod zmieniający nazwy kolumn na nazwy w języku polskim:
nowe_nazwy <- c(
"Klasa",
'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
names(wine) <- nowe_nazwy
View(wine)
# c) Oto kod zapisujący zmienne o wartościach logicznych jako logiczne:
wine$Klasa <- as.factor(wine$Klasa) # zakładając, że Klasa to zmienna celu
# d) Oto kod sprawdzający, czy zmienne o wartościach liczbowych są typu liczbowego, i jeśli nie, zapisujący je jako numeryczne:
wprowadzone <- c('Alkohol', 'Kwas jabłkowy', 'Popiół', 'Alkalność popiołu', 'Magnez', 'Całkowite fenole', 'Flawonoidy', 'Fenole nietrwałe', 'Proantocyjanidy', 'Intensywność koloru', 'Odcień', 'Stężenie odwiedlane win', 'Prolina')
for (zmienna in wprowadzone) {
if (class(wine[[zmienna]]) != "numeric") {
wine[[zmienna]] <- as.numeric(wine[[zmienna]])
}
}
# f) Oto kod sprawdzający i zamieniający brakujące wartości w kolumnach numerycznych na wartości średnie dla tych kolumn:
kolumny_numeryczne <- c('Alkohol', 'Kwas jabłkowy', 'Popiół', 'Alkalność popiołu', 'Magnez', 'Całkowite fenole', 'Flawonoidy', 'Fenole nietrwałe', 'Proantocyjanidy', 'Intensywność koloru', 'Odcień', 'Stężenie odwiedlane win', 'Prolina')
for (kolumna in kolumny_numeryczne) {
brakujace <- is.na(wine[[kolumna]])
if (sum(brakujace) > 0) {
srednia <- mean(wine[[kolumna]], na.rm = TRUE)
wine[[kolumna]][brakujace] <- srednia
}
}
# g) Oto kod zapisujący przetworzone dane do pliku:
write.csv(wine, file = 'wyniki.csv', row.names = FALSE)
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
# b) Oto kod zmieniający nazwy kolumn na nazwy w języku polskim:
nowe_nazwy <- c(
"Klasa",
'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
names(wine) <- nowe_nazwy
View(wine)
# c) Oto kod zapisujący zmienne o wartościach logicznych jako logiczne:
wine$Klasa <- as.factor(wine$Klasa) # zakładając, że Klasa to zmienna celu
# d) Oto kod sprawdzający, czy zmienne o wartościach liczbowych są typu liczbowego, i jeśli nie, zapisujący je jako numeryczne:
wprowadzone <- c('Alkohol', 'Kwas jabłkowy', 'Popiół', 'Alkalność popiołu', 'Magnez', 'Całkowite fenole', 'Flawonoidy', 'Fenole nietrwałe', 'Proantocyjanidy', 'Intensywność koloru', 'Odcień', 'Stężenie odwiedlane win', 'Prolina')
for (zmienna in wprowadzone) {
if (class(wine[[zmienna]]) != "numeric") {
wine[[zmienna]] <- as.numeric(wine[[zmienna]])
}
}
# f) Oto kod sprawdzający i zamieniający brakujące wartości w kolumnach numerycznych na wartości średnie dla tych kolumn:
kolumny_numeryczne <- c('Alkohol', 'Kwas jabłkowy', 'Popiół', 'Alkalność popiołu', 'Magnez', 'Całkowite fenole', 'Flawonoidy', 'Fenole nietrwałe', 'Proantocyjanidy', 'Intensywność koloru', 'Odcień', 'Stężenie odwiedlane win', 'Prolina')
for (kolumna in kolumny_numeryczne) {
brakujace <- is.na(wine[[kolumna]])
if (sum(brakujace) > 0) {
srednia <- mean(wine[[kolumna]], na.rm = TRUE)
wine[[kolumna]][brakujace] <- srednia
}
}
# g) Oto kod zapisujący przetworzone dane do pliku:
write.csv(wine, file = 'wyniki.csv', row.names = FALSE)
wine$Klasa <- as.factor(wine$Klasa) # zakładając, że Klasa to zmienna celu
View(wine
wine$Klasa <- as.factor(wine$Klasa) # zakładając, że Klasa to zmienna celu
wine$Klasa <- as.factor(wine$Klasa) # zakładając, że Klasa to zmienna celu
View(wine)
print(wine)
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
# b) Oto kod zmieniający nazwy kolumn na nazwy w języku polskim:
nowe_nazwy <- c(
"Klasa",
'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
names(wine) <- nowe_nazwy
View(wine)
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
# b) Oto kod zmieniający nazwy kolumn na nazwy w języku polskim:
nowe_nazwy <- c(
"Klasa",
'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
# b) Oto kod zmieniający nazwy kolumn na nazwy w języku polskim:
nowe_nazwy <- c(
"Klasa",
'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
names(wine) <- nowe_nazwy
View(wine)
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
# b) Oto kod zmieniający nazwy kolumn na nazwy w języku polskim:
nowe_nazwy <- c(
"Klasa",
'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
names(wine) <- nowe_nazwy
View(wine)
# c) Oto kod zapisujący zmienne o wartościach logicznych jako logiczne:
wine$Klasa <- as.logical(wine$Klasa) # zakładając, że Klasa to zmienna celu
View(wine)
as.factor(wine$Klasa)
View(wine)
wine$Klasa <- as.factor(wine$Klasa)
View(wine)
wine$Klasa <- as.factor(wine$Klasa)
View(wine)
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
# b) Oto kod zmieniający nazwy kolumn na nazwy w języku polskim:
nowe_nazwy <- c(
"Klasa",
'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
names(wine) <- nowe_nazwy
View(wine)
# c) Oto kod zapisujący zmienne o wartościach logicznych jako logiczne:
wine$Klasa <- as.logical(wine$Klasa)
View(wine)
# d) Oto kod sprawdzający, czy zmienne o wartościach liczbowych są typu liczbowego, i jeśli nie, zapisujący je jako numeryczne:
wprowadzone <- c('Alkohol', 'Kwas jabłkowy', 'Popiół', 'Alkalność popiołu', 'Magnez', 'Całkowite fenole', 'Flawonoidy', 'Fenole nietrwałe', 'Proantocyjanidy', 'Intensywność koloru', 'Odcień', 'Stężenie odwiedlane win', 'Prolina')
for (zmienna in wprowadzone) {
if (class(wine[[zmienna]]) != "numeric") {
wine[[zmienna]] <- as.numeric(wine[[zmienna]])
}
}
# f) Oto kod sprawdzający i zamieniający brakujące wartości w kolumnach numerycznych na wartości średnie dla tych kolumn:
kolumny_numeryczne <- c('Alkohol', 'Kwas jabłkowy', 'Popiół', 'Alkalność popiołu', 'Magnez', 'Całkowite fenole', 'Flawonoidy', 'Fenole nietrwałe', 'Proantocyjanidy', 'Intensywność koloru', 'Odcień', 'Stężenie odwiedlane win', 'Prolina')
for (kolumna in kolumny_numeryczne) {
brakujace <- is.na(wine[[kolumna]])
if (sum(brakujace) > 0) {
srednia <- mean(wine[[kolumna]], na.rm = TRUE)
wine[[kolumna]][brakujace] <- srednia
}
}
# e) Zmienną celu zapisz jako mającą wartości nominalne (polecenie as.factor)
wine$Klasa <- as.factor(wine$Klasa)
View(wine)
# g) Oto kod zapisujący przetworzone dane do pliku:
write.csv(wine, file = 'wyniki.csv', row.names = FALSE)
prine(wine)
print(wine)
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
# b) Oto kod zmieniający nazwy kolumn na nazwy w języku polskim:
nowe_nazwy <- c(
"Klasa",
'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
names(wine) <- nowe_nazwy
View(wine)
# c) Oto kod zapisujący zmienne o wartościach logicznych jako logiczne:
wine$Klasa <- as.logical(wine$Klasa)
View(wine)
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
# b) Oto kod zmieniający nazwy kolumn na nazwy w języku polskim:
nowe_nazwy <- c(
"Klasa",
'Alkohol',
'Kwas jabłkowy',
'Popiół',
'Alkalność popiołu',
'Magnez',
'Całkowite fenole',
'Flawonoidy',
'Fenole nietrwałe',
'Proantocyjanidy',
'Intensywność koloru',
'Odcień',
'Stężenie odwiedlane win',
'Prolina'
)
names(wine) <- nowe_nazwy
View(wine)
# c) Oto kod zapisujący zmienne o wartościach logicznych jako logiczne:
wine$Klasa <- as.logical(wine$Klasa)
View(wine)
# d) Oto kod sprawdzający, czy zmienne o wartościach liczbowych są typu liczbowego, i jeśli nie, zapisujący je jako numeryczne:
wprowadzone <- c('Alkohol', 'Kwas jabłkowy', 'Popiół', 'Alkalność popiołu', 'Magnez', 'Całkowite fenole', 'Flawonoidy', 'Fenole nietrwałe', 'Proantocyjanidy', 'Intensywność koloru', 'Odcień', 'Stężenie odwiedlane win', 'Prolina')
for (zmienna in wprowadzone) {
if (class(wine[[zmienna]]) != "numeric") {
wine[[zmienna]] <- as.numeric(wine[[zmienna]])
}
}
# e) Zmienną celu zapisz jako mającą wartości nominalne (polecenie as.factor)
wine$Klasa <- as.factor(wine$Klasa)
View(wine)
# f) Oto kod sprawdzający i zamieniający brakujące wartości w kolumnach numerycznych na wartości średnie dla tych kolumn:
kolumny_numeryczne <- c('Alkohol', 'Kwas jabłkowy', 'Popiół', 'Alkalność popiołu', 'Magnez', 'Całkowite fenole', 'Flawonoidy', 'Fenole nietrwałe', 'Proantocyjanidy', 'Intensywność koloru', 'Odcień', 'Stężenie odwiedlane win', 'Prolina')
for (kolumna in kolumny_numeryczne) {
brakujace <- is.na(wine[[kolumna]])
if (sum(brakujace) > 0) {
srednia <- mean(wine[[kolumna]], na.rm = TRUE)
wine[[kolumna]][brakujace] <- srednia
}
}
# g) Oto kod zapisujący przetworzone dane do pliku:
write.csv(wine, file = 'wyniki.csv', row.names = FALSE)
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
print(wine)
library(datasets)
path = "C:\\Users\\petitoff\\Desktop\\repos\\UO\\rok 3\\Wprowadzenie do eksploracji danych\\lista3\\"  # używając podwójnych ukośników
setwd(path) ## ustawienie ścieżki
# Załadowanie danych
wine <- read.csv('wine\\wine.data', header = FALSE)
library(ggplot2)
library(reshape2)
correlation_matrix <- function(df, threshold) {
# Obliczanie macierzy korelacji
cor_matrix <- cor(df)
# Rysowanie macierzy korelacji
melted_cor_matrix <- melt(cor_matrix)
plot <- ggplot(data = melted_cor_matrix, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1),
axis.text.y = element_text(size = 12)) +
coord_fixed()
# Zapisywanie rysunku do pliku
ggsave("correlation_matrix.png", plot)
# Wypisywanie par zmiennych o korelacji większej niż zadany próg
cor_pairs <- subset(melted_cor_matrix, abs(value) > threshold & Var1 != Var2)
# Usuwanie powtórzeń
cor_pairs <- cor_pairs[!duplicated(t(apply(cor_pairs[,c("Var1","Var2")],1,sort))),]
return(cor_pairs)
}
# Załadowanie zestawu danych iris
data(iris)
# Usunięcie kolumny Species (bo to jest nasza zmienna celu)
df <- iris[,-5]
# Użycie funkcji na df z progiem 0.5
correlation_matrix(df, 0.5)
library(ggplot2)
library(reshape2)
correlation_matrix <- function(df, threshold) {
# Obliczanie macierzy korelacji
cor_matrix <- cor(df)
# Rysowanie macierzy korelacji
melted_cor_matrix <- melt(cor_matrix)
plot <- ggplot(data = melted_cor_matrix, aes(x=Var1, y=Var2, fill=value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1),
axis.text.y = element_text(size = 12)) +
coord_fixed()
# Zapisywanie rysunku do pliku
ggsave("correlation_matrix.png", plot)
# Wypisywanie par zmiennych o korelacji większej niż zadany próg
cor_pairs <- subset(melted_cor_matrix, abs(value) > threshold & Var1 != Var2)
# Usuwanie powtórzeń
cor_pairs <- cor_pairs[!duplicated(t(apply(cor_pairs[,c("Var1","Var2")],1,sort))),]
return(cor_pairs)
}
# Załadowanie zestawu danych iris
data(iris)
# Usunięcie kolumny Species (bo to jest nasza zmienna celu)
df <- iris[,-5]
# Użycie funkcji na df z progiem 0.5
correlation_matrix(df, 0.5)
